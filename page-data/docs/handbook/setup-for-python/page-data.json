{
    "componentChunkName": "component---src-templates-documentation-tsx",
    "path": "/docs/handbook/setup-for-python",
    "result": {"data":{"markdownRemark":{"id":"e78e2899-fd2a-5701-91b7-c528afe56fe1","excerpt":"About the Python Target In the Python reactor target for Lingua Franca, reactions are written in Python. The user-written reactors are then generated into aâ€¦","html":"<h2 id=\"about-the-python-target\" style=\"position:relative;\"><a href=\"#about-the-python-target\" aria-label=\"about the python target permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About the Python Target</h2>\n<p>In the Python reactor target for Lingua Franca, reactions are written in Python. The user-written reactors are then generated into a Python 3 script that can be executed on several platforms. The Python target has been tested on Linux, MacOS, and Windows. To facilitate efficient and fast execution of Python code, the generated program relies on a C extension to facilitate Lingua Franca APIs such as <code class=\"language-text\">set</code> and <code class=\"language-text\">schedule</code>. To learn more about the structure of the generated Python program, see <a href=\"#implementation-details\">Implementation Details</a>.</p>\n<p>Python reactors can bring the vast library of scientific modules that exist for Python into a Lingua Franca program. Moreover, since the Python reactor target is based on a fast and efficient C runtime library, Lingua Franca programs can execute much faster than native equivalent Python programs in many cases. Finally, interoperability with C reactors is planned for the future.</p>\n<p><strong>NOTE:</strong> In comparison to the C reactor target, the Python target can be up to an order of magnitude slower. However, depending on the type of application and the implementation optimizations in Python, you can achieve an on-par performance to the C target in many applications.</p>\n<h2 id=\"set-up-the-python-target\" style=\"position:relative;\"><a href=\"#set-up-the-python-target\" aria-label=\"set up the python target permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set Up the Python Target</h2>\n<p>First, install Python 3 on your machine. See <a href=\"https://wiki.python.org/moin/BeginnersGuide/Download\">downloading Python</a>.</p>\n<p><strong>NOTE:</strong> The Python target requires a C implementation of Python (nicknamed CPython). This is what you will get if you use the above link, or with most of the alternative Python installations such as Anaconda. See <a href=\"https://www.python.org/download/alternatives/\">this</a> for more details.</p>\n<p>The Python reactor target relies on <code class=\"language-text\">pip</code> and <code class=\"language-text\">setuptools</code> to be able to compile and install a <a href=\"https://docs.python.org/3/extending/extending.html\">Python C extension</a> for each LF program. To install <code class=\"language-text\">pip3</code>, you can follow instructions <a href=\"https://pip.pypa.io/en/stable/installation/\">here</a>.\n<code class=\"language-text\">setuptools</code> can be installed using <code class=\"language-text\">pip3</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pip3 <span class=\"token function\">install</span> setuptools</code></pre></div>\n<p><strong>NOTE:</strong> A <a href=\"https://docs.python.org/3/extending/extending.html\">Python C extension</a> is currently generated for each Lingua Franca program. To ensure cross-compatibility across multiple platforms, this extension is installed in the user space once code generation is finished (see <a href=\"#implementation-details\">Implementation Details</a>). This extension module will have the name LinguaFranca[your_LF_program_name]. There is a handy script <a href=\"https://github.com/lf-lang/lingua-franca/blob/master/test/Python/uninstallAllLinguaFrancaTestPackages.sh\">here</a> that can uninstall all extension modules that are installed automatically by Lingua Franca tools (such as <code class=\"language-text\">lfc</code>).</p>","headings":[{"value":"About the Python Target","depth":2},{"value":"Set Up the Python Target","depth":2}],"frontmatter":{"permalink":"/docs/handbook/setup-for-python","title":"Setup for Python","oneline":"Set up the Python target in Lingua Franca.","preamble":""}},"prev":{"childMarkdownRemark":{"frontmatter":{"title":"Setup for Cpp","oneline":"Set up the C++ target in Lingua Franca.","permalink":"/docs/handbook/setup-for-cpp"}}},"next":{"childMarkdownRemark":{"frontmatter":{"title":"Setup for TypeScript","oneline":"Set up the TypeScript target in Lingua Franca.","permalink":"/docs/handbook/setup-for-typescript"}}}},"pageContext":{"id":"2-setup-for-python","slug":"/docs/handbook/setup-for-python","repoPath":"/packages/documentation/copy/en/topics/Setup for Python.md","previousID":"ad9cced7-7ce4-5c18-bba3-23d1ec57339e","nextID":"7c8319a6-6e9f-5169-b1b8-4f9ea8d5ac7f","lang":"en","modifiedTime":"2022-04-16T23:02:22.859Z"}},
    "staticQueryHashes": []}